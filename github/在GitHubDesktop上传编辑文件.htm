<!-- coding: gbk --><!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>在GitHubDesktop上传编辑文件</title>
<meta name="GENERATOR" content="WinCHM">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<style>
html,body { 
	font-family: Arial, Helvetica, sans-serif;
}
</style>

</head>

<body>
<P><STRONG><FONT color=#800000 size=6>在 GitHub Desktop 上传编辑文件</FONT></STRONG></P>
<H3>一.什么是 GitHub Desktop</H3>
<P>GitHub 使用 git 分布式版本控制系统，而 git 最初是 LinusTorvalds 为帮助 Linux 开发而创造的，它针对的是 Linux 平台，因此 git 和 Windows 从来不是最好的朋友，因为它一点也不像 Windows。GitHub 发布了 GitHub Desktop，为Windows平台开发者提供了一个易于使用的 Git 图形客户端。</P>
<P>GitHub for Windows 是一个 Metro 风格应用程序，集成了自包含版本的Git，bash命令行shell，PowerShell的posh-git扩展。</P>
<P>简单来说，GitHub Desktop 是 Github 的电脑应用版，在 GitHub Desktop 里编辑、上传、合并文件比网页版更加快捷。但是 GitHub Desktop 的用户引导较差，使用时看不懂英文的话很有可能茫然而不是所措。我们推荐配合汉化包使用。</P>
<P>汉化包地址： <A href="https://Github.com/robotze/GithubDesktopZhTool" target=_blank >https://Github.com/robotze/GithubDesktopZhTool</A></P>
<H3>二.如何下载 GitHub Desktop</H3>
<P>安装包下载界面： <A href="https://desktop.Github.com/download/" target=_blank >https://desktop.Github.com/download/</A></P>
<P>因为特殊原因，一些人可能不能正常进入官方的安装包下载界面，不过 COC 不全书群里有 GitHub Desktop 的安装包。</P>
<P>安装包下好后，点击安装包就可以安装了了。</P>
<P>如果由于电脑原因，GitHub Desktop 实在下不来，群里也有现成汉化的整个 GitHub Desktop 的压缩包，下载那个压缩包然后解压就好了。</P>
<P>为了方便理解，接下来的演示都会用汉化版进行展示。</P>
<H3>三.在 GitHub Desktop 克隆文件</H3>
<P>克隆文件，指的是将你 Github 上的文件复制到你的本地电脑上，之后你就可以在电脑上直接修改文件了。</P>
<P>1.首先，你要确保你在 Github 网站上注册了一个账号，并 fork 了不全书，自己仓库里有复制的不全书仓库。以上步骤请查看 <A href="利用Github上传不全书.htm">如何注册 Github 账号</A>与<A href="在 Github 网站上传编辑文件.htm" target=_blank >如何能够编辑 Github 库</A>。</P>
<P>2.然后在你想存储的地方新建一个文件夹，然后打开 GitHub Desktop，点击右上方的【当前储存库】。</P>
<P><IMG border=1 alt="" src="images/38.png" width="70%"></P>
<P>3.然后点击【添加】按钮，然后在小弹窗内选择【克隆储存库】。</P>
<P><IMG border=1 alt="" src="images/39.jpg" width="70%"></P>
<P>4.之后会弹出新窗口，先选中你要编辑的不全书库，切记要选中你 fork 的哪个，然后在本地路径那一栏点击【选择...】，然后在弹出的选择文件夹窗口里选中你之前建的空白夹，最后点击【选择文件夹】。</P>
<P><IMG border=1 alt="" src="images/40.png" width="70%"></P>
<P>5.做完以上步骤后，再点击克隆。</P>
<P><IMG border=1 alt="" src="images/41.png" width="70%"></P>
<P>6.等待仓库复制完成后，会有弹窗询问你打算如何使用此 fork，确认选中的是上面的那条【为父项目做贡献】，然后点击【确认】。</P>
<P><IMG border=1 alt="" src="images/42.png" width="70%"></P>
<P>7.重新点击【当前储存库】，当下面出现你要克隆的库时，就说明你克隆成功了。</P>
<P><IMG border=1 alt="" src="images/43.png" width="70%"></P>
<P>前往你选择的文件夹，里面有你复制的库里面的全部文件，git 是 GitHub Desktop 的插件，用于连接你的网络上的库和本地文件夹，前往不要删掉。</P>
<P>在这个文件夹，你可以快捷的添加、删除文件，跟你编辑本地文件夹并无区别。</P>
<P><IMG border=1 alt="" src="images/46.png" width="70%"></P>
<H3>四.通过 GitHub Desktop 上传修改</H3>
<P>通过 GitHub Desktop ，你可以在本地修改你的库，但你本地的修改只存在于你本地电脑中，并没有上传至网络中的库里。</P>
<P>如果你想把本地的修改上传至库中，你需要以下步骤。</P>
<P>1.打开 GitHub Desktop，在【当前储藏库】中选中你修改的库，可以看到你本地的修改出现在了右边的区域里。</P>
<P>2.然后在【摘要】填写你修改的地方。填写后点击【Commit 到 main】。</P>
<P><IMG border=1 alt="" src="images/47.png" width="70%"></P>
<P>3.等右边的界面显示本地无更改后，点击【推送 origin】，就能将你本地的修改上传至你网站上的库里了。</P>
<P><IMG border=1 alt="" src="images/48.png" width="70%"></P>
<H3>五.同步主仓库的更新</H3>
<P>点击上方的【同步 origin】，就能同步更新了。</P>
<P><IMG border=1 alt="" src="images/44.png" width="70%"></P>
<H3>六.在 GitHub Desktop 创建合并请求</H3>
<P>1.点击上方的【分支】，然后在新弹出的窗口里点击【创建拉取（Pull）请求】。</P>
<P><IMG border=1 alt="" src="images/49.jpeg" width="70%"></P>
<P>2.然后游览器会弹出这个网站，在蓝框里填写你修改的情况。然后点击【Open pull request】。</P><P >
<IMG border=1 alt="" src="images/31.png" width="70%" ></P><P >3.之后便会来到这个界面，当出现红框里面的内容时，就说明可以顺利合并了，等待管理员审核同意就可以了。</P>
<P><IMG border=1 alt="" src="images/32.png" width="70%" ></P>
</body>
</html>